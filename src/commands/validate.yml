description: Run `terraform validate` to test if the code is valid.
parameters:
  dir:
    type: string
    description: |
      The relative path from the workspace root directory to Terraform configuration root directory.
      In the directory, `terraform validate` is executed.
steps:
  - run:
      name: terraform validate
      shell: /bin/bash -eu -o pipefail
      command: |
        echo_command_result_template() {
          local tempfile; tempfile=$(mktemp)
          echo '{{Env "HEADER" }}' > $tempfile
          echo "" >> $tempfile
          echo "\`\`\`" >> $tempfile
          echo '$ {{Env "COMMAND" }}' >> $tempfile
          echo "\`\`\`" >> $tempfile
          echo "" >> $tempfile
          echo "<details>" >> $tempfile
          echo "<summary>Command Output</summary>" >> $tempfile
          echo "" >> $tempfile
          echo "\`\`\`" >> $tempfile
          echo '{{Env "OUTPUT" }}' >> $tempfile
          echo "\`\`\`" >> $tempfile
          echo "" >> $tempfile
          echo "</details>" >> $tempfile
          cat $tempfile
          rm $tempfile
        }
        echo_error() {
          COLOR_1="\e[31;1m"
          COLOR_OFF="\e[m"
          echo -e "${COLOR_1}$*${COLOR_OFF}" >&2
        }

        if [ ! -d "<< parameters.dir >>" ]; then
          echo_error "the directory << parameters.dir >> isn't found. Please check parameters.dir"
          github-comment post -template ":x: [Job Link]($CIRCLE_BUILD_URL) << parameters.dir >> isn't found. Please check parameters.dir"
          exit 1
        fi

        cd << parameters.dir >>
        vlog=$(mktemp)
        if ! terraform validate -no-color > $vlog 2>&1; then
          if [ -n "${CIRCLE_PULL_REQUEST:-""}" ]; then
            echo_command_result_template |
              HEADER=":x: [Job Link]($CIRCLE_BUILD_URL) [<< parameters.dir >>] terraform validate is failure" \
              COMMAND="terraform validate" \
              OUTPUT="$(cat $vlog)" \
              github-comment post
          fi
          rm "$vlog"
          exit 1
        fi
        rm $vlog
