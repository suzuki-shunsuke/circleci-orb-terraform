description: |
  Run `terraform plan` and add a comment to the pull request or Git commit.
parameters:
  dir:
    type: string
    description: |
      the relative path from the workspace root directory to Terraform configuration root directory.
      In the directory, `terraform plan` is executed.
  plan_options:
    type: string
    default: ""
    description: |
      The options of `terraform plan` command. The option `-detailed-exitcode` is set automatically.
      For example, `-refresh=false -parallelism=20`.
  tfnotify_config_path:
    type: string
    default: ""
    description: |
      the relative path from the workspace root directory to tfnotify configuration file path.
      The path is set by `--config`. If this parameter is omitted, `--config` isn't set.
  result_dir:
    type: string
    default: .orb-terraform/results
    description: |
      the relative path from the working directory to the directory where the result of `terraform plan` is written.
      Actually files are written in << parameters.result_dir >>/<< parameters.dir>>.
steps:
  - run:
      name: terraform plan
      shell: /bin/bash -eu -o pipefail
      command: |
        root_dir=$PWD
        result_dir=$PWD/<< parameters.result_dir >>/<< parameters.dir >>
        tfnotify="tfnotify"
        if [ -n "<< parameters.tfnotify_config_path >>" ]; then
          tfnotify="tfnotify --config $root_dir/<< parameters.tfnotify_config_path >>"
        fi

        if [ ! -d "<< parameters.dir >>" ]; then
          echo_error "the directory $checkout_dir isn't found"
          github-comment post -template ":x: [Job Link]($CIRCLE_BUILD_URL) << parameters.dir >> isn't found. Please check parameters.dir"
          exit 1
        fi

        cd "<< parameters.dir >>"

        mkdir -p "$result_dir"
        touch "$result_dir/dummy.txt"
        set +o errexit
        terraform plan -out "$result_dir/plan.out" -detailed-exitcode << parameters.plan_options >> > "$result_dir/plan.txt"
        code=$?
        set -e

        if [ "$code" = "0" ]; then
          # no changed
          cat "$result_dir/plan.txt"
          exit 0
        fi
        cat "$result_dir/plan.txt" | $tfnotify plan --title "Plan << parameters.dir >>"
        if [ "$code" = "2" ]; then
          # changed
          touch $result_dir/changed.txt
          exit 0
        fi
        # failed
        exit 1
